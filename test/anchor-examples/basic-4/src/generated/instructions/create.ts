/**
 * This code was GENERATED using the solita package.
 * Please DO NOT EDIT THIS FILE, instead rerun solita to update it or write a wrapper to add functionality.
 *
 * See: https://github.com/metaplex-foundation/solita
 */

import * as web3 from '@solana/web3.js'
import * as beetSolana from '@metaplex-foundation/beet-solana'
import * as beet from '@metaplex-foundation/beet'

/**
 * @category Instructions
 * @category Create
 * @category generated
 */
export type CreateInstructionArgs = {
  authority: web3.PublicKey
}
/**
 * @category Instructions
 * @category Create
 * @category generated
 */
const createStruct = new beet.BeetArgsStruct<
  CreateInstructionArgs & {
    instructionDiscriminator: number[] /* size: 8 */
  }
>(
  [
    ['instructionDiscriminator', beet.uniformFixedSizeArray(beet.u8, 8)],
    ['authority', beetSolana.publicKey],
  ],
  'CreateInstructionArgs'
)
/**
 * Accounts required by the _create_ instruction
 * @category Instructions
 * @category Create
 * @category generated
 */
export type CreateInstructionAccounts = {
  counter: web3.PublicKey
  user: web3.PublicKey
}

const createInstructionDiscriminator = [24, 30, 200, 40, 5, 28, 7, 119]

/**
 * Creates a _Create_ instruction.
 *
 * @param accounts that will be accessed while the instruction is processed
 * @param args to provide as instruction data to the program
 *
 * @category Instructions
 * @category Create
 * @category generated
 */
export function createCreateInstruction(
  accounts: CreateInstructionAccounts,
  args: CreateInstructionArgs
) {
  const { counter, user } = accounts

  const [data] = createStruct.serialize({
    instructionDiscriminator: createInstructionDiscriminator,
    ...args,
  })
  const keys: web3.AccountMeta[] = [
    {
      pubkey: counter,
      isWritable: true,
      isSigner: true,
    },
    {
      pubkey: user,
      isWritable: true,
      isSigner: true,
    },
    {
      pubkey: web3.SystemProgram.programId,
      isWritable: false,
      isSigner: false,
    },
  ]

  const ix = new web3.TransactionInstruction({
    programId: new web3.PublicKey(
      'CwrqeMj2U8tFr1Rhkgwc84tpAsqbt9pTt2a4taoTADPr'
    ),
    keys,
    data,
  })
  return ix
}
